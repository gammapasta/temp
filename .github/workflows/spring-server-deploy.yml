name: Deploy to GCS Server

#main 브랜치에 push 하면 실행
on:
  push:
    branches:
      - main

jobs:
  # 빌드 후 jar 파일 생성
  build:
    runs-on: ubuntu-latest

    steps:
        # 소스코드 체크아웃
      - name: Checkout code
        uses: actions/checkout@v4

        # 자바 설정
      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'

      # gradlew 실행 권한 부여
      - name: Grant execute permission for gradlew
        run: chmod +x ./gradlew

      # Gradle로 프로젝트 빌드 (JAR 생성)
      - name: Build with Gradle
        run: ./gradlew clean build

      # 빌드된 JAR 파일을 아티팩트로 업로드
      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: spring-app-jar # deploy할때 사용할 이름
          path: build/libs/*.jar # 생성된 JAR 파일 경로

  deploy:
    runs-on: ubuntu-latest
    needs: build

    steps:
      # build job에서 업로드한 아티팩트 다운로드
      - name: Download artifact
        uses: actions/download-artifact@v4
        with:
          name: spring-app-jar

      # ftp를 통해 JAR 파일 업로드
      - name: Upload jar using FTP
        uses: sebastianpopp/ftp-action@releases/v2 # v2 사용 권장
        with:
          host: ${{secrets.FTP_HOST}}
          user: ${{secrets.FTP_USERNAME}}
          password: ${{secrets.FTP_PASSWORD}}
          localDir: .
          remoteDir: /home/t25111/v1.0src/web/backend
          options: '--delete' #업로드 전 remoteDir의 기존 파일 삭제

      # 2.3 ssh로 서버 접속 및 스프링 부트 앱 시작
      - name: SSH restart Spring Boot app
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USERNAME }}
          password: ${{ secrets.SSH_PASSWORD }}
          port: 22
          script: |
            # 변수
            DIRECTORY="/home/t25111/v1.0src/web/backend"
            JAR_FILE="$DIRECTORY/javara-1.0.jar" 
            LOG="$DIRECTORY/logs/backend.log" 
            PROFILE="prod" # application-prod
            #--------------------------------
            cd $DIRECTORY || exit 1 # 디렉토리 이동 실패 시  종료
            
            echo "[t25111] 자바라 서버 종료 시도. 포트 주소: 60011" 
            # lsof 명령어로 60011 사용하는 pid 찾기
            PID=$(lsof -t -i :60011)
            if [ -z "$PID" ]; then
              echo "[t25111] 포트 60011 사용하는 프로세스 없음"
            else
              echo "[t25111] 포트 60011 사용 중인 프로세스 (PID: $PID). 종료 시도"
              kill -15 $PID #종료 시도
              sleep 5
            fi
            
            # JAR 파일 존재 여부 확인
            if [ -z "$JAR_FILE" ]; then
              echo "오류 $JAR_FILE JAR 파일을 찾을 수 없음"
              exit 1
            fi
            
            echo "[t25111] JAR 파일 발견: $JAR_FILE"
            
            #로그 디렉토리 생성
            mkdir -p "$(dirname "$LOG")"
            
            #백그라운드로 시작
            nohup java -Xmx1024m -jar "$JAR_FILE" --spring.profiles.active=$PROFILE > "$LOG" 2>&1 &
            sleep 5
            echo "[t25111] server online"
